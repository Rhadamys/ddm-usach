/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Modelos.Criatura;
import Otros.BotonImagen;
import Otros.Constantes;
import Otros.ContenedorScroll;
import Otros.PanelImagen;
import Otros.VistaPersonalizada;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JScrollPane;
/**
 *
 * @author Esterlina
 */
public class VistaInfoCriaturas extends VistaPersonalizada {
    private final ArrayList<BotonImagen> iconosCriaturas;
    private final ArrayList<Criatura> criaturas;
    private final ContenedorScroll contenedor;
    private final PanelImagen contenedorCriatura;
    private final BotonImagen volver;

    /**
     * Creates new form VistaInfoCriaturas
     */
    public VistaInfoCriaturas() {
        initComponents();
        
        this.volver = new BotonImagen(Constantes.BTN_ATRAS);
        this.add(this.volver);
        this.volver.setLocation(30, 30);
        this.volver.setSize(50, 50);  
        
        this.iconosCriaturas = new ArrayList<BotonImagen>();
        
        this.contenedorCriatura = new PanelImagen();
        this.contenedorCriatura.setLayout(null);
        
        this.contenedor = new ContenedorScroll();    
        this.add(this.contenedor);
        this.contenedor.setSize(397, 493);
        this.contenedor.setLocation(350, 54);
        this.contenedor.setViewportView(this.contenedorCriatura);
        this.contenedor.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        this.contenedor.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        
        criaturas = Criatura.getCriaturas();
        
        final int N_COLUMNAS = 3;
        final int LADO = 100;
        final int SEP = (this.contenedor.getWidth() - N_COLUMNAS * LADO) / (N_COLUMNAS + 1);
        final int MARCO = 20;
        int columna = 0;
        int fila = -1;
        
        for (Criatura criatura: criaturas){
            fila = columna == 0 ? ++fila : fila;
            
            BotonImagen marcoCriatura = new BotonImagen(Constantes.BTN_MARCO);
            this.contenedorCriatura.add(marcoCriatura);
            marcoCriatura.setSize(LADO + MARCO, LADO + MARCO);
            marcoCriatura.setLocation((SEP + LADO) * columna + SEP - MARCO / 2, (SEP + LADO) * fila + SEP - MARCO / 2);
            
            PanelImagen iconoCriatura = new PanelImagen(Constantes.RUTA_CRIATURAS
                    + criatura.getNomArchivoImagen() + Constantes.EXT1);
            this.contenedorCriatura.add(iconoCriatura);
            iconoCriatura.setSize(LADO, LADO);
            iconoCriatura.setLocation((SEP + LADO) * columna + SEP, (SEP + LADO) * fila + SEP);
            
            iconosCriaturas.add(marcoCriatura);

            columna = columna == (N_COLUMNAS - 1)? 0: ++columna;
        }
        
        this.contenedorCriatura.setPreferredSize(new Dimension(390, (LADO + SEP) * (fila + 1) + SEP));
                
        this.setImagenFondo(Constantes.FONDO_INFO_CRIATURAS);
        
        
    }
        public int cantidadCriaturas(){
        return this.criaturas.size();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public BotonImagen getIconoCriatura(int i){
         return this.iconosCriaturas.get(i);
    }
    
    public Criatura getCriatura(BotonImagen iconoCriatura){
        return this.criaturas.get(this.iconosCriaturas.indexOf(iconoCriatura));
    }
   // Variables declaration - do not modify                     
    private javax.swing.JLabel titulo;
    // End of variables declaration    

    public BotonImagen getVolver() {
        return volver;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
