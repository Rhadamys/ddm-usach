/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Modelos.Dado;
import Otros.BotonCheckImagen;
import Otros.BotonImagen;
import Otros.Constantes;
import Otros.ContenedorScroll;
import Otros.PanelImagen;
import Otros.VistaPersonalizada;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JScrollPane;

/**
 *
 * @author mam28
 */
public class SubVistaSeleccionDados extends VistaPersonalizada {
    private SubVistaInfoElemento visInfo;
    private final ArrayList<BotonCheckImagen> panelesDados;
    private final ArrayList<Dado> dados;
    private final ContenedorScroll contenedor;
    private final PanelImagen contenedorDados;
    private final BotonImagen lanzarDados;
    private final PanelImagen iconoDado;
    
    /**
     * Creates new form CompSelDados
     * @param dados Dados del jugador.
     */
    public SubVistaSeleccionDados(ArrayList<Dado> dados) {   
        initComponents(); 
        
        this.panelesDados = new ArrayList<BotonCheckImagen>();
        this.dados = dados;
        
        this.iconoDado = new PanelImagen();
        this.add(this.iconoDado);
        this.iconoDado.setSize(150, 150);
        this.iconoDado.setLocation(90, 375);
        
        this.L1.setFont(Constantes.FUENTE_14PX);
        this.L2.setFont(Constantes.FUENTE_14PX);
        this.L3.setFont(Constantes.FUENTE_14PX);
        this.nivel.setFont(Constantes.FUENTE_14PX);
        this.nombreCriatura.setFont(Constantes.FUENTE_14PX);
        this.cantidadDados.setFont(Constantes.FUENTE_14PX);
        this.titulo.setFont(Constantes.FUENTE_18PX);
        
        this.nivel.setText("");
        this.nombreCriatura.setText("");
        
        this.contenedorDados = new PanelImagen();
        this.contenedorDados.setLayout(null);
        
        this.contenedor = new ContenedorScroll();    
        this.add(this.contenedor);
        this.contenedor.setSize(598, 335);
        this.contenedor.setLocation(101, 84);
        this.contenedor.setViewportView(this.contenedorDados);
        this.contenedor.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        this.contenedor.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        
        final int nColumnas = 4;
        final int lado = Constantes.LADO;
        final int sep = (this.contenedor.getWidth() - nColumnas * lado) / (nColumnas + 1);
        final int marco = Constantes.MARCO;
        int columna = 0;
        int fila = -1;
        
        for (Dado dado: dados){
            fila = columna == 0 ? ++fila : fila;
            
            BotonCheckImagen marcoDado = new BotonCheckImagen(Constantes.BTN_MARCO);
            this.contenedorDados.add(marcoDado);
            marcoDado.setSize(lado + marco, lado + marco);
            marcoDado.setLocation((sep + lado) * columna + sep - marco / 2, (sep + lado) * fila + sep - marco / 2);
            
            PanelImagen iconoCriatura = new PanelImagen(Constantes.RUTA_CRIATURAS
                    + dado.getCriatura().getNomArchivoImagen() + Constantes.EXT1);
            this.contenedorDados.add(iconoCriatura);
            iconoCriatura.setSize(lado, lado);
            iconoCriatura.setLocation((sep + lado) * columna + sep, (sep + lado) * fila + sep);
            
            panelesDados.add(marcoDado);

            columna = columna == (nColumnas - 1)? 0: ++columna;
        }
        
        this.contenedorDados.setPreferredSize(new Dimension(640, (lado + sep) * (fila + 1) + sep));
        
        this.lanzarDados = new BotonImagen(Constantes.BTN_NORMAL);
        this.add(lanzarDados);
        this.lanzarDados.setText("Lanzar dados");
        this.lanzarDados.setSize(200, 50);
        this.lanzarDados.setLocation(480, 455);
        
        this.setImagenFondo(Constantes.FONDO_SELECCION_2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        L1 = new javax.swing.JLabel();
        L2 = new javax.swing.JLabel();
        nivel = new javax.swing.JLabel();
        nombreCriatura = new javax.swing.JLabel();
        L3 = new javax.swing.JLabel();
        cantidadDados = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        L1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        L1.setForeground(java.awt.Color.red);
        L1.setText("Nivel:");
        getContentPane().add(L1);
        L1.setBounds(260, 435, 80, 20);

        L2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        L2.setForeground(java.awt.Color.red);
        L2.setText("Criatura:");
        getContentPane().add(L2);
        L2.setBounds(260, 455, 80, 20);

        nivel.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        nivel.setForeground(java.awt.Color.red);
        nivel.setText("Nivel");
        getContentPane().add(nivel);
        nivel.setBounds(350, 435, 150, 20);

        nombreCriatura.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        nombreCriatura.setForeground(java.awt.Color.red);
        nombreCriatura.setText("Nombre criatura");
        getContentPane().add(nombreCriatura);
        nombreCriatura.setBounds(350, 455, 150, 20);

        L3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        L3.setForeground(java.awt.Color.red);
        L3.setText("Dados seleccionados:");
        getContentPane().add(L3);
        L3.setBounds(260, 495, 160, 17);

        cantidadDados.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        cantidadDados.setForeground(java.awt.Color.red);
        cantidadDados.setText("0");
        getContentPane().add(cantidadDados);
        cantidadDados.setBounds(430, 495, 70, 17);

        titulo.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("<html><center>Selecciona los dados que deseas lanzar. Puedes mantener el mouse sobre alguno de los dados para ver informaci√≥n de la criatura del dado. Luego, presiona \"Lanzar dados\".</center></html>");
        getContentPane().add(titulo);
        titulo.setBounds(50, 0, 700, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void setInfoDado(BotonCheckImagen panelDado){
        if(panelDado != null){
            Dado dado = getDado(panelDado);
            this.iconoDado.setImagen("/Imagenes/Dados/dado_" + dado.getNivel() + ".gif");
            this.nivel.setText(String.valueOf(dado.getNivel()));
            this.nombreCriatura.setText(dado.getCriatura().getNombre());
        }else{
            this.iconoDado.setImagen("/Imagenes/vacio.png");
            this.nivel.setText("");
            this.nombreCriatura.setText("");
        }
        
        this.cantidadDados.setText(String.valueOf(this.cantidadSeleccionados()));
    }
    
    public ArrayList<BotonCheckImagen> getPanelesDados() {
        return panelesDados;
    }

    public ArrayList<Dado> getDadosSeleccionados() {
        ArrayList<Dado> dadosSeleccionados = new ArrayList<Dado>();
        for(int i = 0; i < panelesDados.size(); i++){
            if(panelesDados.get(i).isSelected()){
                dadosSeleccionados.add(dados.get(i));
            }
        }
        
        return dadosSeleccionados;
    }

    public BotonImagen getLanzarDados() {
        return lanzarDados;
    }

    public SubVistaInfoElemento getVisInfo() {
        return visInfo;
    }
    
    public int cantidadSeleccionados(){
        int seleccionados = 0;
        for(BotonCheckImagen panelDado: panelesDados){
            if(panelDado.isSelected()){
                seleccionados++;
            }
        }
        return seleccionados;
    }
    
    public Dado getDado(BotonCheckImagen panelDado){
        return this.dados.get(panelesDados.indexOf(panelDado));
    }

    public void setVisInfo(SubVistaInfoElemento visInfo) {
        this.visInfo = visInfo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel L1;
    private javax.swing.JLabel L2;
    private javax.swing.JLabel L3;
    private javax.swing.JLabel cantidadDados;
    private javax.swing.JLabel nivel;
    private javax.swing.JLabel nombreCriatura;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
