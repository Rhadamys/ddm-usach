/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Modelos.Trampa;
import Otros.BotonImagen;
import Otros.PanelImagen;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author mam28
 */
public class SubVistaSeleccionMagia extends javax.swing.JInternalFrame {
    private final ArrayList<BotonImagen> panelesMagias;
    private final ArrayList<int[]> magias;

    /**
     * Creates new form SubVistaSeleccionTrampa
     * @param fuente Fuente que se utilizará en esta vista.
     * @param magias Magias disponibles.
     * @param puntosMagia Puntos de magia que tiene el jugador.
     */
    public SubVistaSeleccionMagia(Font fuente, ArrayList<int[]> magias, int puntosMagia) {
        initComponents();
        
        ArrayList<HashMap<String, String>> infoMagias = new ArrayList();
        HashMap<String, String> lluviaTorrencial = new HashMap();
        lluviaTorrencial.put("Nombre", "Lluvia torrencial");
        lluviaTorrencial.put("NombreArchivoImagen", "magia_1");
        lluviaTorrencial.put("Descripcion", "<html><p align=\"justify\">Hace que las criaturas enemigas gasten dos unidades de movimiento por cada cuadro que deseen desplazarse durante los próximos 3 turnos del juego.</p></html>");
        lluviaTorrencial.put("Costo", "10");
        infoMagias.add(lluviaTorrencial);
        
        HashMap<String, String> hierbasVenenosas = new HashMap();
        hierbasVenenosas.put("Nombre", "Hierbas venenosas");
        hierbasVenenosas.put("NombreArchivoImagen", "magia_2");
        hierbasVenenosas.put("Descripcion", "<html><p align=\"justify\">El jugador puede seleccionar a 3 criaturas oponentes, durante los próximos 3 turnos estas criaturas recibirán un daño igual al 20% de la vida máxima que estas posean.</p></html>");
        hierbasVenenosas.put("Costo", "15");
        infoMagias.add(hierbasVenenosas);
        
        HashMap<String, String> meteoritosDeFuego = new HashMap();
        meteoritosDeFuego.put("Nombre", "Meteoritos de fuego");
        meteoritosDeFuego.put("NombreArchivoImagen", "magia_3");
        meteoritosDeFuego.put("Descripcion", "<html><p align=\"justify\">El jugador selecciona un lugar del terreno, dentro de un radio de 5 cuadros del terreno, cualquier criatura enemiga que esté ubicada en esta sección recibirá un daño de 30% de la vida máxima que posea. Este efecto dura 3 turnos.</p></html>");
        meteoritosDeFuego.put("Costo", "30");
        infoMagias.add(meteoritosDeFuego);
        
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        
        this.setBorder(null);
        this.setLayout(null);
        this.setOpaque(false);
        this.setBackground(new Color(0,0,0,0));
        
        this.panelesMagias = new ArrayList();
        this.magias = magias;
        
        final int N_COLUMNAS = magias.size();
        final int LADO = 100;
        final int SEP = (640 - N_COLUMNAS * LADO) / (N_COLUMNAS + 1);
        final int MARCO = 20;
        int columna = 0;
        
        for (int[] magia: magias){
            HashMap<String, String> infoMagia = infoMagias.get(magia[0] - 1);
            if(puntosMagia >= Integer.parseInt(infoMagia.get("Costo"))){
                BotonImagen marcoMagia = new BotonImagen("/Imagenes/vacio.png");
                this.add(marcoMagia);
                marcoMagia.setSize(LADO + MARCO, LADO + MARCO);
                marcoMagia.setImagenSobre("/Imagenes/Otros/marco_seleccion.png");
                marcoMagia.setLocation((SEP + LADO) * columna + SEP - MARCO / 2 + 80, (this.getHeight() - LADO - MARCO) / 2);

                PanelImagen iconoMagia = new PanelImagen("/Imagenes/Botones/"
                        + infoMagia.get("NombreArchivoImagen") + ".png");
                this.add(iconoMagia);
                iconoMagia.setSize(LADO, LADO);
                iconoMagia.setLocation((SEP + LADO) * columna + SEP + 80, (this.getHeight() - LADO) / 2);

                panelesMagias.add(marcoMagia);

                columna = columna == (N_COLUMNAS - 1)? 0: ++columna;
            }
        }
        
        this.titulo.setFont(new Font(fuente.getName(), Font.TRUETYPE_FONT, 24));
        
        PanelImagen panelFondo = new PanelImagen("/Imagenes/Fondos/fondo_seleccion_3.png");
        this.add(panelFondo);
        panelFondo.setSize(this.getSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        titulo.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Selecciona la trampa que deseas colocar.");
        getContentPane().add(titulo);
        titulo.setBounds(0, 10, 790, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public BotonImagen getPanelMagia(int i){
        return this.panelesMagias.get(i);
    }
    
    public int cantidadMagias(){
        return this.panelesMagias.size();
    }
    
    public int[] getMagia(BotonImagen panelTrampa){
        return magias.get(this.panelesMagias.indexOf(panelTrampa));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
