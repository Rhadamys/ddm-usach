/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Modelos.Jugador;
import Otros.BotonImagen;
import Otros.Constantes;
import Otros.PanelImagen;
import Otros.VistaPersonalizada;
import java.awt.Point;
import java.util.ArrayList;

/**
 *
 * @author mam28
 */
public class VistaBatalla extends VistaPersonalizada {
    private final BotonImagen ataque;
    private final BotonImagen invocacion;
    private final BotonImagen magia;
    private final BotonImagen movimiento;
    private final BotonImagen trampa;
    private final BotonImagen pausa;
    private final BotonImagen terminarTurno;
    private final PanelImagen panelBotones;
    private final ArrayList<SubVistaInfoJugadorBatalla> vistasJugador;
    private final SubVistaSeleccionDespliegue visSelDesp;
    private SubVistaTablero tablero;
    private SubVistaSeleccionDados visSelDados;
    private SubVistaLanzamientoDados visLanDados;
    private SubVistaSeleccionCriatura visSelCri;
    private SubVistaSeleccionTrampa visSelTram;
    private SubVistaCriaturaRevivir visCriRev;
    private SubVistaSeleccionMagia visSelMag;
    private final SubVistaMagiasActivadas visMagAc;
    private final int[][] posInfoJug = {{5, 5}, {655, 5}, {5, 345}, {655, 345}};
    
    /**
     * Creates new form VistaBatalla
     */
    public VistaBatalla() {
        initComponents();
        
        this.visSelDesp = new SubVistaSeleccionDespliegue();
        this.vistasJugador = new ArrayList<SubVistaInfoJugadorBatalla>();
        
        this.ataque = new BotonImagen(Constantes.BTN_ATAQUE);
        this.invocacion = new BotonImagen(Constantes.BTN_INVOCACION);
        this.magia = new BotonImagen(Constantes.BTN_MAGIA);
        this.movimiento = new BotonImagen(Constantes.BTN_MOVIMIENTO);
        this.trampa = new BotonImagen(Constantes.BTN_TRAMPA);
        this.pausa = new BotonImagen(Constantes.BTN_PAUSA);
        this.terminarTurno = new BotonImagen(Constantes.BTN_NORMAL);
        
        this.panelBotones = new PanelImagen();
        this.add(this.panelBotones);
        this.panelBotones.setSize(500, 50);
        this.panelBotones.setLocation(150, 550);
        
        this.panelBotones.add(ataque);
        this.panelBotones.add(invocacion);
        this.panelBotones.add(magia);
        this.panelBotones.add(movimiento);
        this.panelBotones.add(trampa);
        this.panelBotones.add(pausa);
        this.panelBotones.add(terminarTurno);
        
        this.ataque.setSize(30, 30);
        this.invocacion.setSize(30, 30);
        this.magia.setSize(30, 30);
        this.movimiento.setSize(30, 30);
        this.trampa.setSize(30, 30);
        this.pausa.setSize(30, 30);
        this.terminarTurno.setSize(140, 30);
        
        this.ataque.setLocation(20, 10);
        this.invocacion.setLocation(60, 10);
        this.magia.setLocation(100, 10);
        this.movimiento.setLocation(140, 10);
        this.trampa.setLocation(180, 10);
        this.pausa.setLocation(450, 10);
        this.terminarTurno.setLocation(300, 10);
        
        this.ataque.setEnabled(false);
        this.invocacion.setEnabled(false);
        this.magia.setEnabled(false);
        this.movimiento.setEnabled(false);
        this.trampa.setEnabled(false);
        
        this.terminarTurno.setText("Terminar turno");
        
        mensaje.setText("");
        mensaje.setFont(Constantes.FUENTE_14PX);
        
        this.visMagAc = new SubVistaMagiasActivadas();
        this.add(visMagAc);
                        
        this.setImagenFondo(Constantes.FONDO_BATALLA);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mensaje = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        mensaje.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        mensaje.setForeground(new java.awt.Color(255, 255, 255));
        mensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mensaje.setText("Mensaje");
        getContentPane().add(mensaje);
        mensaje.setBounds(280, 0, 360, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Agrega una vista de información de jugador a la vista de batalla.
     * @param jug Jugador para el cual se creará la vista.
     */
    public void agregarJugador(Jugador jug){
        int i = this.vistasJugador.size();
        SubVistaInfoJugadorBatalla visInfoJug = new SubVistaInfoJugadorBatalla(
                jug, new Point(posInfoJug[i][0], posInfoJug[i][1]));
        
        this.vistasJugador.add(visInfoJug);   
        this.add(visInfoJug, 0);
    }
    
    public void habilitarBotones(){
        this.getAtaque().setEnabled(true);
        this.getMagia().setEnabled(true);
        this.getMovimiento().setEnabled(true);
        this.getTrampa().setEnabled(true);
        this.getTerminarTurno().setEnabled(true);
        this.getPausa().setEnabled(true);
    }
    
    public void deshabilitarBotones(){
        this.getAtaque().setEnabled(false);
        this.getInvocacion().setEnabled(false);
        this.getMagia().setEnabled(false);
        this.getMovimiento().setEnabled(false);
        this.getTrampa().setEnabled(false);
        this.getTerminarTurno().setEnabled(false);
        this.getPausa().setEnabled(false);
        this.getTablero().getCasilla(0, 0).requestFocus();
    }
    
    public void mostrarBarraBotones(){
        this.panelBotones.setVisible(true);
    }
    
    public void ocultarBarraBotones(){
        this.panelBotones.setVisible(false);
    }
    
    public SubVistaTablero getTablero() {
        return tablero;
    }

    public BotonImagen getAtaque() {
        return ataque;
    }

    public BotonImagen getInvocacion() {
        return invocacion;
    }

    public BotonImagen getMagia() {
        return magia;
    }

    public BotonImagen getMovimiento() {
        return movimiento;
    }

    public BotonImagen getTrampa() {
        return trampa;
    }

    public BotonImagen getPausa() {
        return pausa;
    }

    public BotonImagen getTerminarTurno() {
        return terminarTurno;
    }
    
    public SubVistaInfoJugadorBatalla getVistaJugador(int i){
        return vistasJugador.get(i);
    }

    public SubVistaSeleccionDespliegue getVisSelDesp() {
        return visSelDesp;
    }

    public SubVistaSeleccionDados getVisSelDados() {
        return visSelDados;
    }

    public SubVistaLanzamientoDados getVisLanDados() {
        return visLanDados;
    }

    public SubVistaSeleccionCriatura getVisSelCri() {
        return visSelCri;
    }

    public SubVistaSeleccionTrampa getVisSelTram() {
        return visSelTram;
    }

    public SubVistaCriaturaRevivir getVisCriRev() {
        return visCriRev;
    }

    public SubVistaSeleccionMagia getVisSelMag() {
        return visSelMag;
    }

    public SubVistaMagiasActivadas getVisMagAc() {
        return visMagAc;
    }

    public void setTablero(SubVistaTablero tablero) {
        this.tablero = tablero;
        this.add(this.tablero, 0);
        this.tablero.setLocation(150, 50);
    }
    
    public void setMensaje(String mensaje){
        this.mensaje.setText("<html><center>" + mensaje + "</center></html>");
    }

    public void setVisSelDados(SubVistaSeleccionDados visSelDados) {
        this.visSelDados = visSelDados;
    }
    
    public void setVisLanDados(SubVistaLanzamientoDados visLanDados){
        this.visLanDados = visLanDados;
    }

    public void setVisSelCri(SubVistaSeleccionCriatura visSelCri) {
        this.visSelCri = visSelCri;
    }

    public void setVisSelTram(SubVistaSeleccionTrampa visSelTram) {
        this.visSelTram = visSelTram;
    }

    public void setVisCriRev(SubVistaCriaturaRevivir visCriRev) {
        this.visCriRev = visCriRev;
    }

    public void setVisSelMag(SubVistaSeleccionMagia visSelMag) {
        this.visSelMag = visSelMag;
    }
           
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel mensaje;
    // End of variables declaration//GEN-END:variables
}
