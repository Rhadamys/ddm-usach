/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;
import Otros.BotonImagen;
import Otros.CajaPassImagen;
import Otros.CajaTextoImagen;
import Otros.PanelImagen;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author mam28
 */
public class VistaRegistro extends javax.swing.JInternalFrame {
    private final BotonImagen registrarse;
    private final BotonImagen volver;
    private final BotonImagen seleccionarJefe;
    private final PanelImagen iconoJefe;
    private final CajaTextoImagen usuario;
    private final CajaPassImagen pass;
    private final CajaPassImagen repitePass;
    
    /**
     * Creates new form VistaRegistro
     * @param fuentePersonalizada Fuente que se utilizará en esta vista.
     */
    public VistaRegistro(Font fuentePersonalizada) {
        initComponents();
        
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);    
        
        this.registrarse = new BotonImagen("/Imagenes/Botones/boton.png");
        this.add(this.registrarse);
        this.registrarse.setImagenSobre("/Imagenes/Botones/boton_sobre.png");
        this.registrarse.setImagenPresionado("/Imagenes/Botones/boton_presionado.png");
        this.registrarse.setLocation(330, 535);
        this.registrarse.setSize(170, 40);
        this.registrarse.setText("Registrarse");
        this.registrarse.setFont(fuentePersonalizada);
        this.registrarse.setForeground(Color.white);
        
        this.volver = new BotonImagen("/Imagenes/Botones/atras.png");
        this.add(this.volver);
        this.volver.setImagenSobre("/Imagenes/Botones/atras_sobre.png");
        this.volver.setImagenPresionado("/Imagenes/Botones/atras_presionado.png");
        this.volver.setLocation(20, 20);
        this.volver.setSize(50, 50);
        
        this.seleccionarJefe = new BotonImagen("/Imagenes/Botones/boton.png");
        this.add(seleccionarJefe);
        this.seleccionarJefe.setImagenSobre("/Imagenes/Botones/boton_sobre.png");
        this.seleccionarJefe.setImagenPresionado("/Imagenes/Botones/boton_presionado.png");
        this.seleccionarJefe.setLocation(150, 475);
        this.seleccionarJefe.setSize(170, 40);
        this.seleccionarJefe.setText("Seleccionar jefe");
        this.seleccionarJefe.setFont(fuentePersonalizada);
        this.seleccionarJefe.setForeground(Color.white);
        
        this.mensaje.setFont(fuentePersonalizada);
        this.L1.setFont(fuentePersonalizada);
        this.L2.setFont(fuentePersonalizada);
        this.L3.setFont(fuentePersonalizada);
        
        iconoJefe = new PanelImagen("/Imagenes/vacio.png");
        this.add(iconoJefe);
        iconoJefe.setSize(40, 40);
        iconoJefe.setLocation(330, 475);
        iconoJefe.setBorder(new LineBorder(Color.darkGray, 2));
        iconoJefe.setToolTipText("");
        
        usuario = new CajaTextoImagen();
        this.add(usuario);
        usuario.setLocation(230, 435);
        usuario.setSize(140, 30);
        usuario.setFont(fuentePersonalizada);
        usuario.setForeground(Color.white);
        
        pass = new CajaPassImagen();
        this.add(pass);
        pass.setLocation(500, 435);
        pass.setSize(140, 30);
        pass.setFont(fuentePersonalizada);
        pass.setForeground(Color.white);
        
        repitePass = new CajaPassImagen();
        this.add(repitePass);
        repitePass.setLocation(500, 485);
        repitePass.setSize(140, 30);
        repitePass.setFont(fuentePersonalizada);
        repitePass.setForeground(Color.white);
                
        PanelImagen panelFondo = new PanelImagen("/Imagenes/Fondos/fondo_registro.png");
        this.add(panelFondo);
        panelFondo.setLocation(0, 0);
        panelFondo.setSize(this.getSize());
        
        this.setMensaje("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mensaje = new javax.swing.JLabel();
        L1 = new javax.swing.JLabel();
        L2 = new javax.swing.JLabel();
        L3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 102));
        setBorder(null);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        mensaje.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        mensaje.setForeground(new java.awt.Color(255, 255, 255));
        mensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mensaje.setText("Mensaje");
        getContentPane().add(mensaje);
        mensaje.setBounds(150, 410, 490, 17);

        L1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        L1.setForeground(new java.awt.Color(255, 255, 255));
        L1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        L1.setText("Usuario:");
        getContentPane().add(L1);
        L1.setBounds(150, 440, 70, 20);

        L2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        L2.setForeground(new java.awt.Color(255, 255, 255));
        L2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        L2.setText("Pass:");
        getContentPane().add(L2);
        L2.setBounds(380, 440, 110, 20);

        L3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        L3.setForeground(new java.awt.Color(255, 255, 255));
        L3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        L3.setText("Repetir pass:");
        getContentPane().add(L3);
        L3.setBounds(380, 490, 110, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void usuarioNormal(){
        this.usuario.setImagenActual(0);
    }
    
    public void usuarioCorrecto(){
        this.usuario.setImagenActual(1);
    }
    
    public void usuarioErroneo(){
        this.usuario.setImagenActual(2);
    }
    
    public void passNormal(){
        this.pass.setImagenActual(0);
    }
    
    public void passCorrecta(){
        this.pass.setImagenActual(1);
    }
    
    public void passErronea(){
        this.pass.setImagenActual(2);
    }
    
    public void passRepetidaNormal(){
        this.repitePass.setImagenActual(0);
    }
    
    public void passRepetidaCorrecta(){
        this.repitePass.setImagenActual(1);
    }
    
    public void passRepetidaErronea(){
        this.repitePass.setImagenActual(2);
    }
    
    public void jefeNormal(){
        this.iconoJefe.setBorder(new LineBorder(Color.darkGray, 2));
    }
    
    public void jefeCorrecto(){
        this.iconoJefe.setBorder(new LineBorder(Color.green, 2));
    }
    
    public void jefeErroneo(){
        this.iconoJefe.setBorder(new LineBorder(Color.red, 2));
    }
    
    public boolean comprobarCampos(){
        boolean estado = true;
        boolean sePuedeMensaje = true;
        
        if(this.getUsuario().length() < 5){
            if(sePuedeMensaje){
                this.setMensaje("El usuario debe tener por lo menos 5 caracteres.");
                sePuedeMensaje = false;
            }
            
            this.usuarioErroneo();
            estado = false;
        }else{
            this.usuarioNormal();
        }
        
        if(this.getPass().length() < 5){
            if(sePuedeMensaje){
                this.setMensaje("La contraseña debe tener por lo menos 5 caracteres.");
                sePuedeMensaje = false;
            }
            
            this.passErronea();
            estado = false;
        }else{
            this.passCorrecta();
        }
        
        if(this.getPassRepetida().length() < 5 ||
                !this.getPassRepetida().equals(this.getPass())){
            if(sePuedeMensaje){
                this.setMensaje("Las contraseñas no coinciden.");
                sePuedeMensaje = false;
            }
            this.passErronea();
            this.passRepetidaErronea();
            estado = false;
        }else{
            this.passRepetidaCorrecta();
        }
        
        if(this.iconoJefe.getToolTipText().equals("")){
            if(sePuedeMensaje){
                this.setMensaje("Selecciona un jefe de terreno.");
                sePuedeMensaje = false;
            }
            
            this.jefeErroneo();
            estado = false;
        }else{
            this.jefeCorrecto();
        }
        
        return estado;
    }
    
    public BotonImagen getVolver() {
        return volver;
    }
    
    public BotonImagen getSeleccionarJefe() {
        return seleccionarJefe;
    }
    
    public BotonImagen getRegistrarse() {
        return registrarse;
    }
    
    public PanelImagen getIconoJefe() {
        return iconoJefe;
    }
    
    public String getUsuario(){
        return this.usuario.getText();
    }
    
    public String getPass(){
        return String.valueOf(this.pass.getPassword());
    }
    
    public String getPassRepetida(){
        return String.valueOf(this.repitePass.getPassword());
    }
    
    public void setMensaje(String mensaje){
        this.mensaje.setText(mensaje);
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel L1;
    private javax.swing.JLabel L2;
    private javax.swing.JLabel L3;
    private javax.swing.JLabel mensaje;
    // End of variables declaration//GEN-END:variables
}
